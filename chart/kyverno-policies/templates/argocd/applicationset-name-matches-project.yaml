{{- $settings := index (.Values.argocd | default (dict)) "applicationset-name-matches-project" | default (dict) }}
{{- if and (.Values.argocd).enabled (or $settings.enabled (and (not (hasKey $settings "enabled")) .Values.default.enabled)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: applicationset-name-matches-project
  annotations:
    policies.kyverno.io/title: Ensure ApplicationSet Name Matches Project
    policies.kyverno.io/category: Argo
    policies.kyverno.io/severity: medium
    kyverno.io/kyverno-version: 1.6.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/subject: ApplicationSet
    policies.kyverno.io/description: >-
      This policy ensures that the name of the ApplicationSet is the
      same value provided in the project.
spec:
  validationFailureAction: {{ default .Values.default.validationFailureAction $settings.validationFailureAction }}
  failurePolicy: {{ default .Values.default.failurePolicy $settings.failurePolicy }}
  admission: {{ default .Values.default.admission $settings.admission }}
  background: {{ default .Values.default.background $settings.background }}
  rules:
    - name: match-name
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds:
                - ApplicationSet
      preconditions:
        all:
          - key: "{{ "{{ request.operation || 'BACKGROUND' }}" }}"
            operator: NotEquals
            value: DELETE
          - key: "{{ "{{ request.object.spec.template.spec.project }}" }}"
            operator: NotEquals
            value: app-of-apps
      validate:
        allowExistingViolations: true
        message: "The name must match the project."
        pattern:
          spec:
            template:
              spec:
                project: "{{ "{{ request.object.metadata.name }}" }}"
{{- end}}

