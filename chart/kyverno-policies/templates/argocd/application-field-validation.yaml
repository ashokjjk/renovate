{{- $settings := index (.Values.argocd | default (dict)) "application-field-validation" | default (dict) }}
{{- if and (.Values.argocd).enabled (or $settings.enabled (and (not (hasKey $settings "enabled")) .Values.default.enabled)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: application-field-validation
  annotations:
    policies.kyverno.io/title: Application Field Validation
    policies.kyverno.io/category: Argo
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Application
    kyverno.io/kyverno-version: 1.6.0
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      This policy performs some best practices validation on Application fields.
      Path or chart must be specified but never both. And destination.name or
      destination.server must be specified but never both.      
spec:
  validationFailureAction: {{ default .Values.default.validationFailureAction $settings.validationFailureAction }}
  failurePolicy: {{ default .Values.default.failurePolicy $settings.failurePolicy }}
  admission: {{ default .Values.default.admission $settings.admission }}
  background: {{ default .Values.default.background $settings.background }}
  rules:
    - name: source-path-chart
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds:
              - Application
      preconditions:
        all:
          - key: "{{ "{{ request.operation || 'BACKGROUND' }}" }}"
            operator: NotEquals
            value: DELETE
          - key: "{{ "{{ request.object.spec.source.path || request.object.spec.source.chart || '' }}" }}"
            operator: NotEquals
            value: ""
      validate:
        allowExistingViolations: true
        message: >-
          `spec.source.path` OR `spec.source.chart` should be specified but never both.          
        anyPattern:
        - spec:
            source:
              path: '?*'
              X(chart): "null"
        - spec:
            source:
              X(path): "null"
              chart: '?*'
    - name: destination-server-name
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds:
              - Application
      preconditions:
        all:
          - key: "{{ "{{ request.operation || 'BACKGROUND' }}" }}"
            operator: NotEquals
            value: DELETE
      validate:
        allowExistingViolations: true
        message: >-
          `spec.destination.server` OR `spec.destination.name` should be specified but never both.          
        anyPattern:
        - spec:
            destination:
              server: '?*'
              X(name): "null"
        - spec:
            destination:
              X(server): "null"
              name: '?*'
{{- end}}
