---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: external-secrets
---
{{- if not .Values.azureVaults }}
{{ $_ := set .Values "azureVaults" (list (dict "name" "default")) }}
{{- end }}
{{- range .Values.azureVaults }}
{{ $namespace := "secret-values" }}
{{- if ne .name "default" }}
{{ $namespace = printf "secret-values-%s" .name }}
{{- end }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eso-store-role
  namespace: {{ $namespace }}
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorization.k8s.io
  resources:
  - selfsubjectrulesreviews
  verbs:
  - create
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eso-store-sa
  namespace: {{ $namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store-role-binding
  namespace: {{ $namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eso-store-role
subjects:
- kind: ServiceAccount
  name: eso-store-sa
  namespace: {{ $namespace }}
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ .name }}
spec:
  provider:
    kubernetes:
      remoteNamespace: {{ $namespace }}
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: external-secrets
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-store-sa
          namespace: {{ $namespace }}
{{- end}}
